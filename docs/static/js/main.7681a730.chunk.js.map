{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAqCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOhB,SAEE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SArBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNrBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAERC,EAFQ,iDAEyCC,UAAWH,GAFpD,+DAGSI,MAAOF,GAHhB,cAGRG,EAHQ,gBAIOA,EAASC,OAJhB,uBAIPC,EAJO,EAIPA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVvB,kBAcPM,GAdO,4CAAH,sDAkBET,ICWAgB,EA7BM,SAAEf,GAGrB,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAhBAC,qBAAW,WAETpB,EAASC,GACNoB,MAAM,SAAAP,GAELK,EAAS,CACPX,KAAMM,EACNG,SAAS,SAMd,CAAChB,IAGGiB,GCfMI,EAZK,SAAC,GAAuB,EAArBV,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIhC,OACE,sBAAKoB,UAAU,yCAAf,UACE,qBAAKC,IAAKrB,EAAKsB,IAAKZ,IACpB,kCAAKA,EAAL,WCkBSa,EAvBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAEjB,EAAiCe,EAAcf,GAAlCa,EAAb,EAAQN,KAAaS,EAArB,EAAqBA,QAIrB,OACE,qCACE,oBAAIM,UAAU,oCAAd,SAAoDtB,IAElDgB,GAAW,mBAAGM,UAAU,mCAAb,wBAEf,qBAAKA,UAAU,YAAf,SAEKT,EAAOJ,KAAI,SAAAiB,GACV,OAAO,cAAC,EAAD,eAAiCA,GAAfA,EAAMf,aCiB1BgB,MAhCf,WAEE,MAAoCzC,mBAAS,CAAC,kBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BACI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CACEA,SAAUA,GACLA,Y,MCpBjB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7681a730.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cats => [ inputValue, ...cats ]);\r\n      setInputValue('');\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit}>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={ handleInputChange }\r\n      />\r\n\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}","\r\n\r\n\r\nconst getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=KnOuhhvNsU0g5W6KNjsGC5hwVGRwQhjU`\r\n  const response = await fetch( url );\r\n  const {data} = await response.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;","import React, { useEffect, useState } from 'react';\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = ( category ) => {\r\n  \r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n\r\n  \r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n      .then( images => {\r\n                  \r\n        setState({\r\n          data: images,\r\n          loading: false\r\n        })  \r\n        \r\n      } );\r\n\r\n\r\n  }, [category])\r\n\r\n\r\n  return state // { data: [], loading: true };\r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n  // console.log(  id, title, url  )\r\n\r\n  return (\r\n    <div className='card animate__animated animate__zoomIn'>\r\n      <img src={url} alt={title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__zoomIn'>{ category }</h3>\r\n\r\n      { loading && <p className='animate__animated animate__flash'>Loading...</p> }\r\n\r\n    <div className='card-grid'>\r\n      \r\n        {images.map(image => {\r\n          return <GifGridItem key={image.id} { ...image  }/>\r\n        })}\r\n      \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid","import React, { useState } from 'react'\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n\r\n  const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories( [...categories, 'Ranma 1/2'] )\r\n  //   // setCategories( cats => [...cats, 'Ranma 1/2'])\r\n  // }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr />\r\n\r\n\r\n      <ol>\r\n        { categories.map( category => (\r\n          <GifGrid \r\n            category={category} \r\n            key={category}\r\n          />\r\n        ) )\r\n         }\r\n      </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}